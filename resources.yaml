kind: List
apiVersion: v1
metadata: {}

items:

- apiVersion: v1
  kind: Template
  metadata:
    name: apache-kafka
    annotations:
      description: 1-pod Apache Kafka
      tags: messaging,streaming,kafka
  parameters:
  - name: NAME
    description: Name prefix for each object created
    required: true
    value: apache-kafka
  - name: IMAGE
    description: Image with Apache Kafka and Apache ZooKeeper
    required: true
    value: dborchers/openshift-kafka
  objects:
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: ${NAME}
    spec:
      replicas: 2
      selector:
        deploymentconfig: ${NAME}
      template:
        metadata:
          labels:
            deploymentconfig: ${NAME}
        spec:
          containers:
          - name: apache-kafka
            image: ${IMAGE}
            env:
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: apache-kafka
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: apache-zookeper:2181
            - name: KAFKA_CREATE_TOPICS
              value: lithiuminblood:1:1
            volumeMounts:
            - mountPath: /tmp/kafka-logs
              name: kafka-logs
            - mountPath: /var/lib/kafka
              name: ${NAME}-data
            ports:
            - containerPort: 9092
          - name: apache-zookeeper
            image: ${IMAGE}  
            env:
            - name: KAFKA_PORT
              value: "9092"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: apache-kafka
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: apache-zookeper:2181
            - name: KAFKA_CREATE_TOPICS
              value: lithiuminblood:1:1
            volumeMounts:
            - mountPath: /tmp/zookeeper
              name: zookeeper
            ports:
            - containerPort: 2181
          volumes:
          - name: kafka-logs
            emptyDir: {}
          - name: zookeeper
            emptyDir: {}
          - name: ${NAME}-data
            persistentVolumeClaim:
              claimName: ${NAME}-data
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${NAME}
    spec:
      ports:
      - name: kafka
        port: 9092
      - name: zookeeper
        port: 2181
      selector:
        deploymentconfig: ${NAME}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: ${NAME}-data
    spec:
      accessModes: 
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
  - apiVersion: v1
    kind: Route
    metadata:
      name: '${NAME}'
    spec:
      to:
        kind: Service
        name: '${NAME}'
